/* Gaming Effects - Scanlines, CRT, Glitch, and other cool visual effects */

/* CRT Scanlines Effect */
.scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
  background: linear-gradient(
    transparent 50%,
    rgba(220, 38, 127, 0.03) 50%
  );
  background-size: 100% 4px;
  animation: scanlines 0.1s linear infinite;
}

@keyframes scanlines {
  0% { transform: translateY(0); }
  100% { transform: translateY(4px); }
}

.crtEffect {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 998;
  mix-blend-mode: screen;
  background:
    radial-gradient(circle at center, rgba(255, 255, 255, 0.08) 0%, transparent 60%),
    linear-gradient(180deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.6));
  opacity: 0.45;
  animation: crtPulse 6s ease-in-out infinite;
}

@keyframes crtPulse {
  0%, 100% { opacity: 0.35; }
  40% { opacity: 0.5; }
  70% { opacity: 0.4; }
}

/* Glitch Effect for Text */
.glitchText {
  position: relative;
  animation: glitch 2s infinite;
}

.glitchText::before,
.glitchText::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitchText::before {
  animation: glitchTop 1s infinite;
  clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
}

.glitchText::after {
  animation: glitchBottom 1.5s infinite;
  clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
  -webkit-clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
}

@keyframes glitch {
  2%, 64% {
    transform: translate(2px, 0) skew(0deg);
  }
  4%, 60% {
    transform: translate(-2px, 0) skew(0deg);
  }
  62% {
    transform: translate(0, 0) skew(5deg);
  }
}

@keyframes glitchTop {
  2%, 64% {
    transform: translate(2px, -2px);
    color: hsl(var(--accent-hsl));
  }
  4%, 60% {
    transform: translate(-2px, 2px);
    color: hsl(180, 100%, 50%);
  }
  62% {
    transform: translate(13px, -1px) skew(-13deg);
    color: hsl(var(--accent-hsl));
  }
}

@keyframes glitchBottom {
  2%, 64% {
    transform: translate(-2px, 0);
    color: hsl(120, 100%, 50%);
  }
  4%, 60% {
    transform: translate(-2px, 0);
    color: hsl(var(--accent-hsl));
  }
  62% {
    transform: translate(-22px, 5px) skew(21deg);
    color: hsl(120, 100%, 50%);
  }
}

/* Matrix Rain Effect */
.matrixRain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -2;
  opacity: 0.1;
}

/* Gaming Console Lines */
.consoleLines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 997;
  background: 
    linear-gradient(90deg, transparent 98%, hsl(var(--accent-hsl) / 0.05) 100%),
    linear-gradient(0deg, transparent 98%, hsl(var(--accent-hsl) / 0.05) 100%);
  background-size: 25px 25px;
  animation: consoleMove 10s linear infinite;
}

@keyframes consoleMove {
  0% { background-position: 0 0; }
  100% { background-position: 25px 25px; }
}

/* Cyber Border Effect */
.cyberBorder {
  position: relative;
  overflow: hidden;
}

.cyberBorder::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent, 
    hsl(var(--accent-hsl)), 
    transparent
  );
  animation: cyberSweep 3s infinite;
}

.cyberBorder::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent, 
    hsl(var(--accent-hsl)), 
    transparent
  );
  animation: cyberSweep 3s infinite 1.5s;
}

@keyframes cyberSweep {
  0% { left: -100%; }
  50% { left: 100%; }
  100% { left: 100%; }
}

/* Hologram Effect */
.hologram {
  position: relative;
  background: linear-gradient(
    45deg,
    transparent 30%,
    hsl(var(--accent-hsl) / 0.1) 50%,
    transparent 70%
  );
  background-size: 20px 20px;
  animation: hologramShift 2s ease-in-out infinite;
}

@keyframes hologramShift {
  0%, 100% { background-position: 0 0; }
  50% { background-position: 20px 20px; }
}

/* Neon Glow Text */
.neonGlow {
  color: hsl(var(--accent-hsl));
  text-shadow: 
    0 0 5px hsl(var(--accent-hsl)),
    0 0 10px hsl(var(--accent-hsl)),
    0 0 15px hsl(var(--accent-hsl)),
    0 0 20px hsl(var(--accent-hsl));
  animation: neonFlicker 1.5s ease-in-out infinite alternate;
}

@keyframes neonFlicker {
  0%, 100% {
    text-shadow: 
      0 0 5px hsl(var(--accent-hsl)),
      0 0 10px hsl(var(--accent-hsl)),
      0 0 15px hsl(var(--accent-hsl)),
      0 0 20px hsl(var(--accent-hsl));
  }
  50% {
    text-shadow: 
      0 0 2px hsl(var(--accent-hsl)),
      0 0 5px hsl(var(--accent-hsl)),
      0 0 8px hsl(var(--accent-hsl)),
      0 0 12px hsl(var(--accent-hsl));
  }
}

/* Gaming HUD Elements */
.hudElement {
  position: relative;
  border: 1px solid hsl(var(--accent-hsl) / 0.3);
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

.hudElement::before {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(45deg, 
    hsl(var(--accent-hsl) / 0.5), 
    transparent, 
    hsl(var(--accent-hsl) / 0.5)
  );
  z-index: -1;
  border-radius: inherit;
  animation: hudPulse 2s ease-in-out infinite;
}

@keyframes hudPulse {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

/* Particle Trail Effect */
.particleTrail {
  position: relative;
  overflow: hidden;
}

.particleTrail::after {
  content: '';
  position: absolute;
  top: 50%;
  left: -10px;
  width: 4px;
  height: 4px;
  background: hsl(var(--accent-hsl));
  border-radius: 50%;
  box-shadow: 
    0 0 6px hsl(var(--accent-hsl)),
    10px 0 6px hsl(var(--accent-hsl)),
    20px 0 6px hsl(var(--accent-hsl)),
    30px 0 6px hsl(var(--accent-hsl));
  animation: particleMove 2s linear infinite;
}

@keyframes particleMove {
  0% { left: -40px; opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { left: 100%; opacity: 0; }
}

/* Cyber Grid */
.cyberGrid {
  background-image: 
    linear-gradient(hsl(var(--accent-hsl) / 0.1) 1px, transparent 1px),
    linear-gradient(90deg, hsl(var(--accent-hsl) / 0.1) 1px, transparent 1px);
  background-size: 30px 30px;
  animation: gridPulse 3s ease-in-out infinite;
}

@keyframes gridPulse {
  0%, 100% { 
    background-image: 
      linear-gradient(hsl(var(--accent-hsl) / 0.05) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--accent-hsl) / 0.05) 1px, transparent 1px);
  }
  50% { 
    background-image: 
      linear-gradient(hsl(var(--accent-hsl) / 0.15) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--accent-hsl) / 0.15) 1px, transparent 1px);
  }
}

/* Disable effects for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .scanlines,
  .glitchText,
  .matrixRain,
  .consoleLines,
  .cyberBorder,
  .hologram,
  .neonGlow,
  .hudElement,
  .particleTrail,
  .cyberGrid {
    animation: none !important;
  }
  
  .scanlines,
  .crtEffect,
  .terminalGlow,
  .consoleLines {
    display: none !important;
  }
}